name: OpenList-Magisk Release

on:
  workflow_dispatch:
    inputs:
      version_bump:
        description: '版本号更新类型 (major/minor/patch)'
        required: true
        default: 'patch'

env:
  REPO_NAME: OpenList-Magisk
  VERSION_FILE: version.txt  # 存储版本号的文件

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Initialize version
        id: version
        run: |
          # 检查版本文件是否存在，不存在则创建初始版本 v1.0.0
          if [ ! -f "$VERSION_FILE" ]; then
            echo "v1.0.0" > $VERSION_FILE
          fi
          
          # 读取当前版本
          CURRENT_VERSION=$(cat $VERSION_FILE)
          echo "当前版本: $CURRENT_VERSION"
          
          # 解析版本号
          VERSION=${CURRENT_VERSION#v}
          IFS='.' read -ra VERSION_PARTS <<< "$VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}

          # 根据输入更新版本号
          BUMP_TYPE=${{ github.event.inputs.version_bump }}
          case $BUMP_TYPE in
            major)
              NEW_VERSION="v$((MAJOR + 1)).0.0"
              ;;
            minor)
              NEW_VERSION="v${MAJOR}.$((MINOR + 1)).0"
              ;;
            patch)
              if [ "$PATCH" -eq 9 ]; then
                NEW_VERSION="v${MAJOR}.$((MINOR + 1)).0"
              else
                NEW_VERSION="v${MAJOR}.${MINOR}.$((PATCH + 1))"
              fi
              ;;
            *)
              echo "无效的版本更新类型: $BUMP_TYPE"
              exit 1
              ;;
          esac
          
          # 保存新版本到环境变量
          echo "新版本: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update version file
        run: |
          echo "$NEW_VERSION" > $VERSION_FILE
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add $VERSION_FILE
          git commit -m "🔖 版本号更新至 $NEW_VERSION"
          git push

      - name: Create version tag
        run: |
          git tag -a "$NEW_VERSION" -m "版本 $NEW_VERSION"
          git push origin "$NEW_VERSION"

      - name: Zip artifacts
        run: |
          cd OpenList-magisk
          # 排除指定的README.md文件和其他不必要文件
          zip -r ../${{ env.REPO_NAME }}-$NEW_VERSION.zip . \
            -x ".git*" \
            -x ".github/*" \
            -x "bin/README.md" \
            -x "data/README.md"

      - name: Generate release note
        run: |
          # 获取北京时间（CST，UTC+8）
          BEIJING_TIME=$(TZ='Asia/Shanghai' date +"%Y-%m-%d %H:%M:%S")
          
          cat <<EOF > release_notes.txt
          🚀 ${{ env.REPO_NAME }} $NEW_VERSION 发布
          🌐 管理地址: http://0.0.0.0:5244
          📅 编译时间: $BEIJING_TIME
          👤 用户名: admin
          🔐 管理员密码设置方式
             • KernelSU 用户：                  
             在OpenList模块 → 打开 → KsuWebUI设置
             • Magisk 用户：        
             运行/data/adb/modules/OpenList/webui.sh
          🏷️ 版本号: $NEW_VERSION
          EOF

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.NEW_VERSION }}
          name: "${{ env.REPO_NAME }} ${{ env.NEW_VERSION }}"
          body_path: release_notes.txt
          files: |
            ${{ env.REPO_NAME }} ${{ env.NEW_VERSION }}.zip